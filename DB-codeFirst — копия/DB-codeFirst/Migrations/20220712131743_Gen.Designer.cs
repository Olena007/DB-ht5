// <auto-generated />
using System;
using DB_codeFirst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB_codeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220712131743_Gen")]
    partial class Gen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DB_codeFirst.DbModels.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            DateOfBirth = new DateTime(1988, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olena",
                            LastName = "Ivanova",
                            Request = "lalal"
                        },
                        new
                        {
                            ClientId = 2,
                            DateOfBirth = new DateTime(1986, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gleb",
                            LastName = "Ivanov",
                            Request = "olololol"
                        },
                        new
                        {
                            ClientId = 3,
                            DateOfBirth = new DateTime(1986, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vlad",
                            LastName = "Glech",
                            Request = "allalala"
                        },
                        new
                        {
                            ClientId = 4,
                            DateOfBirth = new DateTime(1996, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dima",
                            LastName = "Chern",
                            Request = "lslslsls"
                        },
                        new
                        {
                            ClientId = 5,
                            DateOfBirth = new DateTime(1988, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Max",
                            LastName = "Kosten",
                            Request = "lwlwwllw"
                        });
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.EmployeeProject", b =>
                {
                    b.Property<int>("EmployeeProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeProjectId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeProjectId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject", (string)null);
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfficeId1")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficeId");

                    b.HasIndex("OfficeId1");

                    b.ToTable("Office", (string)null);
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Starteddate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 500m,
                            ClientId = 1,
                            Name = "alal",
                            Starteddate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 300m,
                            ClientId = 1,
                            Name = "ooops",
                            Starteddate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 560987m,
                            ClientId = 2,
                            Name = "nononono",
                            Starteddate = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 234m,
                            ClientId = 3,
                            Name = "ooopSSs",
                            Starteddate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 300m,
                            ClientId = 4,
                            Name = "oOOoops",
                            Starteddate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 6,
                            Budget = 2345m,
                            ClientId = 5,
                            Name = "FGGFG",
                            Starteddate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Title", b =>
                {
                    b.Property<int>("Titleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Titleid"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Titleid");

                    b.ToTable("Title", (string)null);
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Employee", b =>
                {
                    b.HasOne("DB_codeFirst.DbModels.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_codeFirst.DbModels.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.EmployeeProject", b =>
                {
                    b.HasOne("DB_codeFirst.DbModels.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_codeFirst.DbModels.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Office", b =>
                {
                    b.HasOne("DB_codeFirst.DbModels.Office", null)
                        .WithMany("Offices")
                        .HasForeignKey("OfficeId1");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Project", b =>
                {
                    b.HasOne("DB_codeFirst.DbModels.Client", "Client")
                        .WithMany("Clients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Client", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Office", b =>
                {
                    b.Navigation("Offices");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("DB_codeFirst.DbModels.Title", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
